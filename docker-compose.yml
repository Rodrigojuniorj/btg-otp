version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: btg-otp
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DB_HOST=btg-postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=btg_db
      - DB_SCHEMA=public
      - JWT_SECRET=508e703c81a194c84a9895bd04362f504b33d8366a2f371cc0d346074fa6e7697c8f2e9d2df38ac8edb86f4935a45037053f16821d1667d6c3d8afaf082f366f
      - JWT_EXPIRES_IN=7d
      - PORT=3333
      - DOCUMENTATION_PREFIX=api/v1/btg
      - OTP_LENGTH=7
      - OTP_MINUTE_DURATION=5
      - JWT_OTP_SECRET=c9ad76206cdf96c4410f24d248aefa7f4e9849c90e26576e7a890f28212edeb44624d2b01467657647fe2ec655b3626584b994593fe67842938e4d4fb2726d8a
      - REDIS_HOST=btg-redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - REDIS_PASSWORD=btg_redis_password
      - SMTP_HOST=smtp.gmail.com
      - PORT_EMAIL=465
      - SECURE_EMAIL=true
      - USER_EMAIL=junioryrj@gmail.com
      - BBC_EMAIL=rodrigo.franco@unifio.edu.br
      - PASS_EMAIL=oyjn prnc rfcy zfqz
      - SERVER_URL=http://localhost:3333
      - OTP_MAX_ATTEMPTS=3
    ports:
      - '3333:3333'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - btg-network
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'wget --no-verbose --tries=1 --spider http://localhost:3333/api/v1/btg/health || exit 1',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  postgres:
    image: postgres:15-alpine
    container_name: btg-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: btg_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - btg-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres -d btg_db']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: btg-redis
    image: redis
    ports:
      - 6379:6379
    environment:
      REDIS_PASSWORD: btg_redis_password
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '-a', '${REDIS_PASSWORD}', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - btg-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  btg-network:
    driver: bridge
